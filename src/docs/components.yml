components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com

    Order:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        cakeShapeId:
          type: string
        cakeSizeId:
          type: string
        toppings:
          type: array
          items:
            type: string
        message:
          type: string

    CakeShape:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number 
      example:
        id: 5ebac534954b54139806c112
        name: Round
        price: 0.5
    CakeSize:
      type: object
      properties:
        id:
          type: string
        size:
          type: string
        price:
          type: number 
      example:
        id: 5ebac534954b54139806c112
        size: Small
        price: 0.5
    Topping:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        quantity:
          type: number
        price:
          type: number 
      example:
        id: 5ebac534954b54139806c112
        type: Sprinkles
        quantity: 1
        price: 0.5    

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string


  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT